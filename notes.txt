*General information
- Lambda parameter (rate of change): probability that a gene family either expands (via gene gain) or contracts (via gene loss);
-- One lambda parameter is estimated (or more than one if different branches have their own lambdas) for the set of ALL gene families (CAFE 2 estimated one lambda per gene family, but confidence intervals were very large; in CAFE 3 this function is not available to users);
-- Gene gain and gene loss rates can be considered separately. Then lambda is just the rate of gene gain, and mu is the rate of gene loss;

- CAFE's equilibrium assumption (probability gain = probability of loss) means genomes are neither consistently expanding nor contracting (does NOT mean a specific gene family must experience equal numbers of gains and losses);

# --- #

*Likelihoods (see Hahn et al. 2005, and its Sup. file)
- Each node, terminal or not, is assigned a random variable S, with its value s being the # of genes in a given gene family for that node (species);
-- Sigma is the set of all s's for all S's (1 S per node in the tree); we are usually not interested in computing sigma, b/c we can only see the s's from the leaves -- we want to compute the likelihood of L(R), the gene family sizes of the leaves descending from the root R with a gene family size of r (conditioning on r=1 to 100, see below);
--- l(R) is a given instance of L(R);

- Conditional likelihoods can be calculated by averaging over all the possible assignments of gene family sizes to internal nodes (except for the root, as we will condition on the root having a given gene family size R -- see below);
-- This process is called "marginalization";
-- These algorithms are called "message passing" or "sum-product", and go like this:

   for all nodes S that are not leaf nodes:
       Prob(L(S) = l(S) | S = i) = # read this as the probability that leaves decending from S have gene family sizes l(S), given node S has a gene family size of i
       = multiplication (over all DIRECT children C of S) of Prob(L(C) = l(C) | S = i)

   with:
    Prob(L(C) = l(C) | S = i) = 
       = summation (over all gene family sizes j) of Prob(C = j | S = i) * Prob(L(C) = l(C) | C = j)
       # here there is a probability internal node C has a gene family size of j given its parent S has a gene family size of i; and then given that C has a family size of j, there is a probability that C's descendant leaves have gene family sizes of l(C)
       # Prob(C = j | S =i) drops steeply with increasing j, so the upper limit of j is set to 100

   1) So the algorithm is a multiplication of summations.
   2) We sum over the probabilities (likelihoods) of the observed leaf gene family sizes given all possible assignments of gene family sizes j of direct internal node parents C.
   3) Then we multiply the likelihoods of all possible parents C (descending from the same deeper internal node S) together.
   4) This multiplication of summations is done for all deeper internal nodes S -- recursively, until S = R (root).

- Lambda is the value that maximizes the conditional likelihoods of all gene families together (more specifically, the sum of each gene family's conditional log likelihood);
-- A gene family's conditional likelihood will be conditioned on a given root gene family size r -- r will be the value that maximizes this conditional likelihood;

# --- # 

*Identifying gene families with significant changes
- Unusual gene families cannot be identified based on their likelihoods because of the "large family bias" (roots w/ larger family sizes will have lower likelihoods than those w/ smaller ones, so they cannot be fairly compared);

- For each gene family, CAFE picks root gene family sizes (R is the random variable, r is its value) from 1 to 100 (r=1 to 100), and estimates the 100 conditional likelihoods (the test statistic; conditional on the root gene family size);

- The conditional p-value is the probability that a random gene family with the same root family size has a smaller likelihood than that calculated for the focal gene family;

- The largest p-value coming from one of the 100 root gene family sizes is conservatively picked as the focal gene family p-value; it is called the supremum conditional p-value;

- Conditional p-values are computed in two different ways:
-- 1) Analytically: this method requires time that is exponential in the number of nodes in the tree (not feasible for larger trees);
-- 2) Approximation (sampling) method: many (i.e., 1000) leaf gene family numbers are generated using a BD model over the provided phylogeny with the rate estimates of the best-fit model (conditioning on a root gene family size);
---   Each random sample produces one conditional likelihood, and all samples together constitute a null empirical distribution of conditional likelihoods against which the observed one can be compared;
---   The conditional p-value is the (# of random samples that have a conditional likelihood smaller than the observed one + 1/2 the # of random samples with the same conditional likelihood as the observed) / total # of random samples

# --- #

*Identifying the unlikely branch
- The unlikely branch is inferred for gene families with significant p-values;

- The unlikely branch can be identified in two different ways:
-- 1) Removing one branch from the tree at a time, but doing this for all branches: the reduced model (w/ 1 fewer branch) has its conditional p-value calculated, and if that conditional p-value becomes larger enough, the branch that was removed is considered the one where the gene family expanded/contracted;
---   Here, the conditional p-value of the reduced model is conditioned on two root gene family sizes (since there will be two subtrees as a result of removing one branch), and found through sampling;
-- 2) The conditional likelihood of a gene family is computed by letting lambda be tuned with expectation-maximization for each branch separately;
---   If the conditional likelihood improves sufficiently when a given branch has its own lambda, that branch is considered the one where the gene family expanded/contracted;
---   "Sufficient" improvement is measured using model comparison: 
----  Models w/ 1 global-rate parameter (1 rate parameter for the whole tree) can be compared to models where different branches are assigned different rates;
----- When models are nested, they can be compared w/ likelihood-ratio tests (LRTs): -2 * log(Lk_1 / Lk_2) = -2 * (lnL_1 - lnL_2) is chi-square distributed with degrees of freedom set to the # of excess parameters;
----- When models are not nested, they can be compared with AIC;
